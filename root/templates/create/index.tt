[% META title = 'Home' %]
[% PROCESS banner.tt %]
[% PROCESS views.tt %]

<style>
.media:first-child {
margin-top: 15px;
}
.delete-media {
position: relative;
top: -85px;
left: -12px;
cursor: pointer;
}
.media {
padding-top: 9px;
padding-left: 12px;
}

#create {
    visibility: hidden;
}

#submit-wo-btn {
    visibility: hidden;
}

</style>

<script>
    var unsaved = false;
    window.onbeforeunload = confirmExit;
    function confirmExit() {
	if ( unsaved ) 
	  return "You have unsaved changes, are you sure you want to leave this page?";
	else
	  return;
    }
</script>

<script>

// User is leaving the page.  If there are uploaded files, and the
// workorder has not yet been submitted, warn the user.
$(document).ready( function() {
    filepicker.setKey( picker_key );

    $("#localfileformsubmit").on( 'click', function(evt) {
	evt.preventDefault();
	$("#lfmessage").hide();
	$("#localfileprogress").show();
	var formData = new FormData();
	var file = document.getElementById('upload').files[0];
	formData.append('upload', file);

	var xhr = new XMLHttpRequest();
	xhr.open( 'post', '[% c.storage_server %]/upload', true );

	xhr.upload.onprogress = function(e) {
	    if (e.lengthComputable) {
		var percentage = (e.loaded / e.total) * 100;
		$("#localfileprogress .bar").css( 'width', percentage + '%' );
	    }
	};

	xhr.onerror = function(e) {
	    $("#lfmessage").html( "ERROR" );
	    $("#lfmessage").show();
	};

	xhr.onload = function(e) {
	    if ( this.status == 200 ) {
		// this.response
		var res = JSON.parse( this.response );
		console.log( JSON.stringify( res ) );
		$("#dialog-localfile").data( 'file', res );
	    }
	};

	xhr.send( formData );

    });
});

function delete_media( id ) {
    dialogManager.confirm(
	"Delete this media file from your studio?",
	function() {
	    // Delete from server, then delete from filepicker
	    $.ajax({
		url: "/services/mediafile/delete",
		data: { id: id },
		dataType: 'json',
		success: function( json ) {
		    if ( json.error ) {
			dialogManager.error( json.message, json.detail );
		    }
		    else {
			$("#mid-"+id).remove();
		    }
		}
	    });
	});
}

function add_media() {
    filepicker.pickMultiple ( 
	{ 
          extensions: ['3g2','3gp','3gp2','3gpp','3gpp2','aac','ac3',
	  	       'eac3','ec3','f4a','f4b','f4v','flv','highwinds',
		       'm4a','m4b','m4r','m4v','mkv','mov','mp3',
		       'mp4','oga','ogg','ogv','ogx','ts','webm','wma',
		       'wmv','png','jpg','gif',
		       '3G2','3GP','3GP2','3GPP','3GPP2','AAC','AC3',
		       'EAC3','EC3','F4A','F4B','F4V','FLV','HIGHWINDS',
		       'M4A','M4B','M4R','M4V','MKV','MOV','MP3',
		       'MP4','OGA','OGG','OGV','OGX','TS','WEBM','WMA',
		       'WMV','PNG','JPG','GIF']
        },
        function( fpfiles ) {
	    var num = fpfiles.length;
            for( var i=0; i<fpfiles.length; i++ ) {
                var url = fpfiles[i].url;
		// install the wo id
		fpfiles[i]['workorder_id'] = $("#create").data( "wo" ).id;
		fpfiles[i]['location'] = 'fp';
                $.ajax({
                    url: "/services/mediafile/create",
                    method: "POST",
                    dataType: "json",
                    data: fpfiles[i],
                    success: function( json ) {
			if ( json.error ) {
			    dialogManager.error( json.message );
			}
			if ( --num == 0 ) {
			    $("#submit-wo-btn").css( "visibility", "visible" );
			    list();
			}
                    },
                    error: function() {
                        dialogManager.error( "failed to store " + url );
			if ( --num == 0 ) {
			    list();
			}
                    }
                });
            }
        },
        function( err ) {
	    if ( err && err.code && err.code == 101 ) {
		// User closed dialog without picking anything.  No problem.
	    }
	    else {
		dialogManager.error( json2string( err ) );
	    }
        }
    );
    return;
}

function add_local() {
    $("#localfileprogress").hide();
    $("#lfmessage").hide();
    dialogManager.custom( '#dialog-localfile', function() {
	var file = $("#dialog-localfile").data( 'file' );
	if ( file ) {
            $.ajax({
                url: "/services/mediafile/create",
                method: "POST",
                dataType: "json",
                data: {
		    workorder_id: $("#create").data( "wo" ).id,
		    location: 'fs',
		    filename: file.name,
		    url: file.path,
		    mimetype: file.mimetype,
		    size: file.size
		},
                success: function( json ) {
		    if ( json.error ) {
			dialogManager.error( json.message );
		    }
		    $("#submit-wo-btn").css( "visibility", "visible" );
		    list();
                },
                error: function() {
                    dialogManager.error( "failed to store " + url );
		    list();
                }
            });
	}
    });
}

// Get the list of media files that have been uploaded.  The
// answer looks like:
// { files: [] }
// where each item in the array is a FPFile object, along with
// "id" from the server-side database.
//
function list() {
    var wo = $("#create").data( "wo" );
    $.ajax({
        url: "/services/wo/bom",
	data: { id: wo.id },
        dataType: 'json',
        success: function( json ) {
            if ( json.error ) {
                dialogManager.error( json.message );
            }
            else {
                $("#media-list").empty();
                for( var i=0; i<json.media.length; i++ ) {
                    // Use a client-side template to create a media-object
                    if ( json.media[i].views.main.mimetype.indexOf('image') == 0 )
                        $("#media-list").append( ich.media_file_image(json.media[i]) );
                    else if ( json.media[i].views.main.mimetype.indexOf('audio') == 0 )
                        $("#media-list").append( ich.media_file_audio(json.media[i]) );
                    else
                        $("#media-list").append( ich.media_file_video(json.media[i]) );
                }
                // apply the pretty photo plugin
                $("#media-list a[rel^='prettyPhoto']").prettyPhoto({
		    allow_resize: true,
		    overlay_gallery: false
		});
            }
        }
    });
}

function create_project() {
    var woname = $("#project-name").val();  // if not assigned, the server will make one up?
    $.ajax({
	url: "/services/wo/create",
	data: { name: woname },
	dataType: 'json',
	success: function( json ) {
	    if ( json.error ) {
		dialogManager.error( json.message, json.detail );
	    }
	    else {
		// Store the wo record returned for future reference 
		unsaved = true;
		$("#create").data( 'wo', json.wo );
		$("#create h1").html( json.wo.name );
		$("#create-start").remove(); // don't need that any more!
		$("#create").css( "visibility", "visible" );
	    }
	}
    });
}

function submit_wo() {
    var wo = $("#create").data( "wo" );
    $.ajax({
	url: "/services/wo/bom",
	data: { id: wo.id },
	dataType: 'json',
	success: function( json ) {
	    if ( json.error ) {
		dialogManager.error( json.message, json.detail );
	    }
	    else {
		dialogManager.confirm( ich.wo_bom( json ),function() {
		    $.ajax({
			url: "/services/wo/submit",
			data: { id: wo.id },
			dataType: 'json',
			success: function(json) {
			    if ( json.error ) {
				dialogManager.error( json.message, json.detail );
			    }
			    else {
				// redirect back home.
				unsaved = false;
				window.location = "/";
			    }
			}
		    });
		});
	    }
	}
    });
}

</script>

<div id="create-start" class="row-fluid">
  <div class="span8 offset2 hero-unit">
    <h1>Start a New Project!</h1>
    <p>Create a new project by giving it a name, and then adding media
      files.  You can include photos, videos and music, be creative!
    <p/>
    <input type="text" class="input-xxlarge" id="project-name" name="project-name" placeholder="Project Name" />
    <p/>
    <a class="btn btn-primary btn-large" href="javascript: create_project();">
      Create!
    </a>
    </p>
  </div>
</div>

<div id="create">
  <h1>Your Media Files</h1>
  <div id="media-list-outter" class="well">
    <ul id="media-list" class="thumbnails">
    </ul>
  </div>
  <button id="add-media-btn" class="btn btn-primary" type="button"
          onclick="add_media();">Add Social Media Files</button>
  <button id="add-local-btn" class="btn btn-primary" type="button"
          onclick="add_local();">Add Local Media Files</button>
  <button id="submit-wo-btn" class="btn btn-primary" type="button"
          onclick="submit_wo();">Submit Project</button>
</div>

<!-- Custom dialog -->
<div id="dialog-localfile" class="modal hide">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h3>Add Local File</h3>
  </div>
  <div class="modal-body">
    <form class="inline" id="localfileform">
      <input type="file" name="upload" id="upload" />
      <button id="localfileformsubmit" type="submit" class="btn">Upload</button>
    </form>
  </div>
  <div id="localfileprogress" class="progress">
    <div class="bar"></div>
  </div>
  <div id="lfmessage" class="alert">
  </div>
  <div class="modal-footer">
    <button class="btn btn-primary" data-dismiss="modal" aria-hidden="true">OK</button>
    <button class="btn" data-dismiss="modal" aria-hidden="true">Cancel</button>
  </div>
</div>

<!-- Pull in filepicker -->
<script type="text/javascript" src="//api.filepicker.io/v1/filepicker.js"></script>
