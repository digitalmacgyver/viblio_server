[% META title = 'Home' %]
[% PROCESS banner.tt %]
[% PROCESS views.tt %]

<style>
.media:first-child {
margin-top: 15px;
}
.delete-media {
position: relative;
top: -85px;
left: -12px;
cursor: pointer;
}
.media {
padding-top: 9px;
padding-left: 12px;
</style>


<script>

$(document).ready( function() {
    filepicker.setKey( picker_key );
    list();
});

function delete_media( id ) {
    dialogManager.confirm(
	"Delete this media file from your studio?",
	function() {
	    // Delete from server, then delete from filepicker
	    $.ajax({
		url: "/services/pf/delete",
		data: { id: id },
		dataType: 'json',
		success: function( json ) {
		    if ( json.error ) {
			dialogManager.error( json.message, json.detail );
		    }
		    else {
			filepicker.remove( json.media,
					   function() {
					       //success
					       $("#mid-"+json.media.id).remove();
					   },
					   function(err) {
					       //failure!
					       dialogManager.error( json2string( err ) );
					   });
		    }
		}
	    });
	});
}

function add_media() {
    filepicker.pickAndStore ( 
	{ multiple: true,
          mimetypes: [ 'image/*', 'video/*', 'audio/*' ]
        },
        { location: 'S3' },
        function( fpfiles ) {
	    var num = fpfiles.length;
            for( var i=0; i<fpfiles.length; i++ ) {
                var url = fpfiles[i].url;
                $.ajax({
                    url: "/services/pf/create",
                    method: "POST",
                    dataType: "json",
                    data: fpfiles[i],
                    success: function( json ) {
			if ( json.error ) {
			    dialogManager.error( json.message );
			}
			if ( --num == 0 ) {
			    list();
			}
                    },
                    error: function() {
                        dialogManager.error( "failed to store " + url );
			if ( --num == 0 ) {
			    list();
			}
                    }
                });
            }
        },
        function( err ) {
	    if ( err && err.code && err.code == 101 ) {
		// User closed dialog without picking anything.  No problem.
	    }
	    else {
		dialogManager.error( json2string( err ) );
	    }
        }
    );
    return;
}

// Get the list of media files that have been uploaded.  The
// answer looks like:
// { files: [] }
// where each item in the array is a FPFile object, along with
// "id" from the server-side database.
//
function list() {
    $.ajax({
        url: "/services/pf/list",
        dataType: 'json',
        success: function( json ) {
            if ( json.error ) {
                dialogManager.error( json.message );
            }
            else {
                $("#media-list").empty();
                for( var i=0; i<json.media.length; i++ ) {
                    // Use a client-side template to create a media-object
                    if ( json.media[i].mimetype.indexOf('image') == 0 )
                        $("#media-list").append( ich.media_file_image(json.media[i]) );
                    else if ( json.media[i].mimetype.indexOf('audio') == 0 )
                        $("#media-list").append( ich.media_file_audio(json.media[i]) );
                    else
                        $("#media-list").append( ich.media_file_video(json.media[i]) );
                    if ( json.media[i].mimetype.indexOf('image') == 0 )
			$("#" + json.media[i].id).attr( "src", json.media[i].url + '/convert?w=64&h=64&fit=scale' );
                }
                // apply the pretty photo plugin
                $("#media-list a[rel^='prettyPhoto']").prettyPhoto({
		    allow_resize: true,
		    overlay_gallery: false
		});
            }
        }
    });
}

</script>

<h1>Your Media Files</h1>
<div id="media-list-outter" class="well">
  <ul id="media-list" class="thumbnails">
  </ul>
</div>
<button class="btn btn-primary" type="button"
        onclick="add_media();">Add Media Files</button>

<!-- Pull in filepicker -->
<script type="text/javascript" src="//api.filepicker.io/v1/filepicker.js"></script>
