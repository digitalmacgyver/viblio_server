#!/bin/sh
# Start a Catalyst app under FastCGI
# Copyright (c) 2009-2010, Andrew Rodland
# See LICENSE for redistribution conditions.
### BEGIN INIT INFO
# Provides: webapp
# Required-Start: $local_fs $network $named
# Required-Stop: $local_fs $network $named
# X-Start-Before: mq-prod
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: A Catalyst Application
### END INIT INFO 

. /lib/lsb/init-functions

PATH=$PATH:/sbin

APPNAME=VA
APPDIR=/deploy/prod/viblio-server
PROCS=4
SOCKET=localhost:30001
# Set this if you have more than one instance of the app and you don't want
# them to step on each other's pidfile.
PIDSUFFIX=prod

VA_CONFIG_LOCAL_SUFFIX=prod
export VA_CONFIG_LOCAL_SUFFIX

PATH=/home/ubuntu/perl5/perlbrew/bin:/home/ubuntu/perl5/perlbrew/perls/perl-5.16.0/bin:$PATH
export PATH

UNIXNAME=$(echo $APPNAME | perl -pe 's/::/_/;$_=lc')
# Leave these unset and we won't try to setuid/setgid.
USER=ubuntu
GROUP=ubuntu

# local::lib path, if you want to use it.
LOCALLIB=

if [ -f "/etc/default/"$UNIXNAME ]; then
    . "/etc/default/"$UNIXNAME
fi

if [ $(id -u) -eq 0 ] ; then
    PIDDIR=/var/run/$UNIXNAME
    mkdir $PIDDIR >/dev/null 2>&1
    chown $USER:$GROUP $PIDDIR
    chmod 775 $PIDDIR
else
    PIDDIR=/tmp
fi

PIDFILE=$PIDDIR/$UNIXNAME${PIDSUFFIX:+"-$PIDSUFFIX"}.pid
PIDFILE2=$PIDDIR/emailer.pid

if [ -n "$LOCALLIB" ] ; then
    eval `perl -I"$LOCALLIB/lib/perl5" -Mlocal::lib="$LOCALLIB"`
fi

## S O F T W A R E  U P G R A D E ##

INSTALLER=/usr/local/bin/check-and-install-software.pl

_check_viblio() {
    if [ -x $INSTALLER ]; then
	$INSTALLER -db $VA_CONFIG_LOCAL_SUFFIX -app viblio-server $*
    else
	return 0
    fi
}

_check_webgui() {
    if [ -x $INSTALLER ]; then
	$INSTALLER -db $VA_CONFIG_LOCAL_SUFFIX -app webgui $*
    else
	return 0
    fi
}

check_and_install() {
    _check_webgui -quiet || /etc/init.d/nginx restart
    _check_viblio -quiet || ( _stop && _start_nocheck && /etc/init.d/mq-$VA_CONFIG_LOCAL_SUFFIX restart)
}

check_sw() {
    _check_viblio $*
    _check_webgui $*
}

####################################

_upload_activity_report() {
    ( cd $APPDIR; ./script/video-uploaded-emails.pl $* )
}

check_running() {
    [ -s $PIDFILE ] && kill -0 $(cat $PIDFILE) >/dev/null 2>&1
}

check_compile() {
    return 1
}

_start_nocheck() {
    start-stop-daemon --start --make-pidfile --pidfile $PIDFILE2 --chdir $APPDIR \
    ${USER:+"--chuid"} $USER ${GROUP:+"--group"} $GROUP --background \
    --startas $APPDIR/script/emailer.pl

    start-stop-daemon --start --pidfile $PIDFILE --chdir $APPDIR \
    ${USER:+"--chuid"} $USER ${GROUP:+"--group"} $GROUP --background \
    --startas $APPDIR/script/${UNIXNAME}_fastcgi.pl -- \
    -n $PROCS -l $SOCKET -p $PIDFILE

    for i in 1 2 3 4 5 6 7 8 9 10; do
        sleep 1
        if check_running ; then
            return 0
        fi
    done
    return 1
}

_start_emailer() {
    start-stop-daemon --start --make-pidfile --pidfile $PIDFILE2 --chdir $APPDIR \
    ${USER:+"--chuid"} $USER ${GROUP:+"--group"} $GROUP --background \
    --startas $APPDIR/script/emailer.pl
}

_start() {
    _check_viblio -quiet || /etc/init.d/mq-$VA_CONFIG_LOCAL_SUFFIX restart
    _check_webgui -quiet || /etc/init.d/nginx restart

    start-stop-daemon --start --make-pidfile --pidfile $PIDFILE2 --chdir $APPDIR \
    ${USER:+"--chuid"} $USER ${GROUP:+"--group"} $GROUP --background \
    --startas $APPDIR/script/emailer.pl

    start-stop-daemon --start --pidfile $PIDFILE --chdir $APPDIR \
    ${USER:+"--chuid"} $USER ${GROUP:+"--group"} $GROUP --background \
    --startas $APPDIR/script/${UNIXNAME}_fastcgi.pl -- \
    -n $PROCS -l $SOCKET -p $PIDFILE

    for i in 1 2 3 4 5 6 7 8 9 10; do
        sleep 1
        if check_running ; then
            return 0
        fi
    done
    return 1
}

start() {
    log_daemon_msg "Starting $APPNAME" $UNIXNAME
    if check_running; then
        log_progress_msg "already running"
        log_end_msg 0
        exit 0
    fi

    rm -f $PIDFILE 2>/dev/null

    _start
    log_end_msg $?
    return $?
}

_stop_emailer() {
    start-stop-daemon --stop --user $USER --quiet --oknodo --pidfile $PIDFILE2 \
    --retry TERM/5/TERM/30/KILL/30 \
    || log_failure_message "It won't die!"
    rm -f $PIDFILE2 2>/dev/null
}

_stop() {
    start-stop-daemon --stop --user $USER --quiet --oknodo --pidfile $PIDFILE2 \
    --retry TERM/5/TERM/30/KILL/30 \
    || log_failure_message "It won't die!"
    rm -f $PIDFILE2 2>/dev/null

    start-stop-daemon --stop --user $USER --quiet --oknodo --pidfile $PIDFILE \
    --retry TERM/5/TERM/30/KILL/30 \
    || log_failure_message "It won't die!"
}

stop() {
    log_daemon_msg "Stopping $APPNAME" $UNIXNAME

    _stop
    log_end_msg $?
    return $?
}

restart() {
    log_daemon_msg "Restarting $APPNAME" $UNIXNAME

    check_compile && _stop && _start
    log_end_msg $?
    return $?
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart|force-reload)
        restart
        ;;
    check-compile)
        check_compile
        ;;
    check)
        check_sw -check
        ;;
    check_quiet)
        check_sw -check -quiet
        ;;
    check_and_install)
        check_and_install
        ;;
    send_daily_upload_emails)
	_upload_activity_report --days-ago 1
	;;
    send_weekly_upload_emails)
	_upload_activity_report --days-ago 7
	;;
    report_daily_upload_emails)
	_upload_activity_report --days-ago 1 --report
	;;
    report_weekly_upload_emails)
	_upload_activity_report --days-ago 7 --report
	;;
    start_emailer)
	_start_emailer
	;;
    stop_emailer)
	_stop_emailer
	;;
    *)
        echo $"Usage: $0 {start|stop|restart|check|check_quiet|check_and_install}"
        exit 1
esac
exit $?
